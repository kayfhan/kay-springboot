apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
}

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

//plugins {
//    id 'java'
//    id 'idea'
//}
//apply from: 'com.google.protobuf'

group 'me.kay'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-gradle-plugin
//    compile group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: '0.8.11'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.0'


    // https://mvnrepository.com/artifact/io.grpc/grpc-stub
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.27.0'
// https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.27.0'


//    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        compile 'javax.annotation:javax.annotation-api:1.3.1'
//    }
    // Extra me.kay.me.kay.proto source files besides the ones residing under
    // "src/main".
//    protobuf files("lib/protos.tar.gz")
//    protobuf files("resources/me.kay.me.kay.proto/")

    // Extra me.kay.me.kay.proto source files for test besides the ones residing under
    // "src/test".
//    testProtobuf files("lib/protos-test.tar.gz")

}

// https://plugins.gradle.org/m2/com/google/protobuf/protoc/3.0.0/protoc-3.0.0-osx-x86_64.exe
protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.11.0'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc { }
        }
    }
}
